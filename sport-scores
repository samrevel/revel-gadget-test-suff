<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="Sample Gadget" description="" author="Sam Kim" background="transparent">
        <UserPref name="myStringPref" display_name="Example string preference" datatype="string" default_value="Hello World!" required="true" />
        <UserPref name="myEnumPref" display_name="Example enum preferences" datatype="enum" default_value="first">
            <EnumValue value="first" display_value="First" />
            <EnumValue value="second" display_value="Second" />
        </UserPref>
        <UserPref name="myStylePref" display_name="Example style preferences" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
        <UserPref name="myBooleanPref" display_name="Example boolean preference" datatype="bool" default_value="true" />
        <UserPref name="myColorPref" display_name="color" datatype="color" default_value="#ff00ff" />

        <!-- The following preferences should not be modified -->
        <UserPref name="ForeColor" datatype="hidden" />
        <UserPref name="BackColor" datatype="hidden" />
        <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
        <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
        <UserPref name="rdKey" display_name="Device Registration Key" default_value="*|DEVICE.REGISTRATIONKEY|*" datatype="hidden" />
    </ModulePrefs>
    <Content type="html">
        <![CDATA[

<style type="text/css">
  body *
  {
    line-height: 1.2em; 
    letter-spacing: 0; 
    word-spacing: normal;
  }

  body
  {
    background: transparent;
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    overflow: hidden;
  }
  .my-style
  {
    __UP_myStylePref__;
  }
      a:link {
        text-decoration: none;
        __UP_myStylePref__;
        pointer-events: none;
        cursor: default;
      }
      .hidden-xs {
        visibility: collapse;
      }
      td a img {
        visibility: collapse;
      }
</style>

<!-- Preferences can be inlined in your HTML like so -->
<!--Refresh every 12 hours. 12 sec * 60 * 60 = 43200 sec -->
<meta http-equiv="refresh" content="43200" />

<h1></h1>
<div class="my-style">
<table>
<!--NFL GAMEs-->
<th class="NFL" class="gameHeader">NFL Game Scores</th>
<tr class="NFL" class="game1"></tr>
<tr class="NFL" class="game2"></tr>
<tr class="NFL" class="game3"></tr>
<tr class="NFL" class="game4"></tr>
<tr class="NFL" class="game5"></tr>
<tr class="NFL" class="game6"></tr>
<tr class="NFL" class="game7"></tr>
<tr class="NFL" class="game8"></tr>
<tr class="NFL" class="game9"></tr>
<tr class="NFL" class="game10"></tr>
<tr class="NFL"></tr>

<!--NBA GAMES-->
<th class="NBA" class="gameHeader">NBA Game Scores</th>
<tr class="NBA" class="game1"></tr>
<tr class="NBA" class="game2"></tr>
<tr class="NBA" class="game3"></tr>
<tr class="NBA" class="game4"></tr>
<tr class="NBA" class="game5"></tr>
<tr class="NBA" class="game6"></tr>
<tr class="NBA" class="game7"></tr>
<tr class="NBA" class="game8"></tr>
<tr class="NBA" class="game9"></tr>
<tr class="NBA" class="game10"></tr>
<tr class="NBA"></tr>

<!--MLB GAMES-->
<th class="MLB" class="gameHeader">MLB Game Scores</th>
<tr class="MLB" class="game1"></tr>
<tr class="MLB" class="game2"></tr>
<tr class="MLB" class="game3"></tr>
<tr class="MLB" class="game4"></tr>
<tr class="MLB" class="game5"></tr>
<tr class="MLB" class="game6"></tr>
<tr class="MLB" class="game7"></tr>
<tr class="MLB" class="game8"></tr>
<tr class="MLB" class="game9"></tr>
<tr class="MLB" class="game10"></tr>
<tr class="MLB"></tr>

<!--NHL GAMES-->
<th class="NHL" class="gameHeader">NHL Game Scores</th>
<tr class="NHL" class="game1"></tr>
<tr class="NHL" class="game2"></tr>
<tr class="NHL" class="game3"></tr>
<tr class="NHL" class="game4"></tr>
<tr class="NHL" class="game5"></tr>
<tr class="NHL" class="game6"></tr>
<tr class="NHL" class="game7"></tr>
<tr class="NHL" class="game8"></tr>
<tr class="NHL" class="game9"></tr>
<tr class="NHL" class="game10"></tr>
<tr class="NHL"></tr>

<!--MLS GAMES-->
<th class="MLS" class="gameHeader">MLS Game Scores</th>
<tr class="MLS" class="game1"></tr>
<tr class="MLS" class="game2"></tr>
<tr class="MLS" class="game3"></tr>
<tr class="MLS" class="game4"></tr>
<tr class="MLS" class="game5"></tr>
<tr class="MLS" class="game6"></tr>
<tr class="MLS" class="game7"></tr>
<tr class="MLS" class="game8"></tr>
<tr class="MLS" class="game9"></tr>
<tr class="MLS" class="game10"></tr>
</table>
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();
        var linkNFL = "https://www.thesportsdb.com/league/4391-NFL";
      var linkNBA = "https://www.thesportsdb.com/league/4387-NBA";
      var linkMLB = "https://www.thesportsdb.com/league/4424-MLB";
      var linkNHL = "https://www.thesportsdb.com/league/4380-NHL";
      var linkMLS =
        "https://www.thesportsdb.com/league/4346-American-Major-League-Soccer";

      yes("NFL", linkNFL);
      yes("NBA", linkNBA);
      yes("MLB", linkMLB);
      yes("NHL", linkNHL);
      yes("MLS", linkMLS);
      function yes(gameName, link) {
        var xhr = new XMLHttpRequest();

        xhr.open("GET", link, true);
        xhr.responseType = "document";

        xhr.onload = function () {
          if (xhr.readyState == 4 && xhr.status == 200) {
            var response = xhr.responseXML.querySelectorAll(
              "#feature > div > div > div.col-sm-9 > table:nth-child(16) > tbody > tr"
            );
            displayGames(response);
          }
        };

        xhr.onerror = function () {
          console.error(xhr.status, xhr.statusText);
        };

        //game scores ae the last 10 rows, so you have to pop all but last 10
        function displayGames(response) {
          document.getElementsByClassName(gameName)[10].innerHTML =
            response[response.length - 1].innerHTML;

          document.getElementsByClassName(gameName)[9].innerHTML =
            response[response.length - 2].innerHTML;

          document.getElementsByClassName(gameName)[8].innerHTML =
            response[response.length - 3].innerHTML;

          document.getElementsByClassName(gameName)[7].innerHTML =
            response[response.length - 4].innerHTML;

          document.getElementsByClassName(gameName)[6].innerHTML =
            response[response.length - 5].innerHTML;

          document.getElementsByClassName(gameName)[5].innerHTML =
            response[response.length - 6].innerHTML;

          document.getElementsByClassName(gameName)[4].innerHTML =
            response[response.length - 7].innerHTML;

          document.getElementsByClassName(gameName)[3].innerHTML =
            response[response.length - 8].innerHTML;

          document.getElementsByClassName(gameName)[2].innerHTML =
            response[response.length - 9].innerHTML;

          document.getElementsByClassName(gameName)[1].innerHTML =
            response[response.length - 10].innerHTML;
        }

        xhr.send();
      }



  // This function is called after the gadget has been initialized.
  function onLoad() {

  }

  gadgets.util.registerOnLoadHandler(onLoad);

</script>

]]>
    </Content>
</Module>
