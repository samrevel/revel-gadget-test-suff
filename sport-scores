<?xml version="1.0" encoding="UTF-8" ?>
<Module>
    <ModulePrefs title="Sample Gadget" description="" author="Sam Kim" background="transparent">
        <UserPref name="myStringPref" display_name="Example string preference" datatype="string" default_value="Hello World!" required="true" />
        <UserPref name="myEnumPref" display_name="Example enum preferences" datatype="enum" default_value="first">
            <EnumValue value="first" display_value="First" />
            <EnumValue value="second" display_value="Second" />
        </UserPref>
        <UserPref name="myStylePref" display_name="Example style preferences" datatype="style" default_value="font-family:Verdana;color:rgb(255, 255, 255);font-size:24px;text-align:left;" required="true" />
        <UserPref name="myBooleanPref" display_name="Example boolean preference" datatype="bool" default_value="true" />
        <UserPref name="myColorPref" display_name="color" datatype="color" default_value="#ff00ff" />

        <!-- The following preferences should not be modified -->
        <UserPref name="ForeColor" datatype="hidden" />
        <UserPref name="BackColor" datatype="hidden" />
        <UserPref name="rdW" display_name="Width" required="true" default_value="280" datatype="hidden" />
        <UserPref name="rdH" display_name="Height" required="true" default_value="190" datatype="hidden" />
        <UserPref name="rdKey" display_name="Device Registration Key" default_value="*|DEVICE.REGISTRATIONKEY|*" datatype="hidden" />
    </ModulePrefs>
    <Content type="html">
        <![CDATA[

<style type="text/css">
  body *
  {
    line-height: 1.2em; 
    letter-spacing: 0; 
    word-spacing: normal;
  }

  body
  {
    background: transparent;
    width: __UP_rdW__px;
    height: __UP_rdH__px;
    overflow: hidden;
  }
  .my-style
  {
    __UP_myStylePref__;
  }
</style>

<!-- Preferences can be inlined in your HTML like so -->
<div class="my-style">
<table>
<tr id="game9">test</tr>
<tr id="game8">to</tr>
<tr id="game7">see</tr>
<tr id="game6">what</tr>
<tr id="game5">is</tr>
<tr id="game4">wrong</tr>
<tr id="game3">with</tr>
<tr id="game2">this</tr>
<tr id="game1">gadget</tr>
<tr id="game0"></tr>
</table>
</div>

<script type="text/javascript">

  var prefs = new gadgets.Prefs();



  // This function is called after the gadget has been initialized.
  function onLoad() {


        var xhr = new XMLHttpRequest();

      xhr.open("GET", "https://www.thesportsdb.com/league/4391-NFL", true);
      xhr.responseType = "document";

      xhr.onload = function () {
        if (xhr.readyState == 4 && xhr.status == 200) {
          var response = xhr.responseXML.querySelectorAll(
            '#feature > div > div > div.col-sm-9 > table:nth-child(16) > tbody > tr'
          );
          document.getElementById("game0").innerHTML =
            response[response.length - 1].innerHTML;

          document.getElementById("game1").innerHTML =
            response[response.length - 2].innerHTML;

          document.getElementById("game2").innerHTML =
            response[response.length - 3].innerHTML;

          document.getElementById("game3").innerHTML =
            response[response.length - 4].innerHTML;

          document.getElementById("game4").innerHTML =
            response[response.length - 5].innerHTML;

          document.getElementById("game5").innerHTML =
            response[response.length - 6].innerHTML;

          document.getElementById("game6").innerHTML =
            response[response.length - 7].innerHTML;

          document.getElementById("game7").innerHTML =
            response[response.length - 8].innerHTML;

          document.getElementById("game8").innerHTML =
            response[response.length - 9].innerHTML;

          document.getElementById("game9").innerHTML =
            response[response.length - 10].innerHTML;
        }
      };

      xhr.onerror = function () {
        console.error(xhr.status, xhr.statusText);
      };

      xhr.send();


  }

  gadgets.util.registerOnLoadHandler(onLoad);

</script>

]]>
    </Content>
</Module>
